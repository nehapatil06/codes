# A function to generate odd sized magic squares
def generate_Magic_Square(size):
    magic_square=[[0 for x in range(size)] for y in range(size)]

    # Initializing first position of matrix
    i=int(size/2)
    j=size-1

    # Fill the magic square by placing values at appropriate position
    for num in range(1, size*size + 1): # range(start, end, step)
        magic_square[i][j] = num
        new_i, new_j = (i - 1) % size, (j + 1) % size

        # Check if the next cell is already filled or out of bounds
        if magic_square[new_i][new_j] != 0:
            new_i = (i + 1) % size  # Move down
            new_j = j  # Stay in the same column

        i, j = new_i, new_j



    sum=size*(size*size+1)/2
    print("Sum of each row or column is : ",sum)
    print("Magic Square of size",size,"*",size,"is : \n")

    for i in range(0,size):
        for j in range(0,size):
            print(' %2d ' % (magic_square[i][j]),end=' | ')

            # To display magic square in matrix form
            if j==size-1:
                print()

while True:
    n=int(input("\nEnter the size of the MAGIC SQUARE : "))
    if n%2==0:
        s=int(input("Please enter an ODD Number (for example - 3,5,7,9,....) : "))
        generate_Magic_Square(s)
    else:
        generate_Magic_Square(n)

   
    a = input("\nDo you want to print Magic Square of some other size (y/N) : ")
    if a=='n' or a=='N' or a==' ' or a=='':
      break
